#calculating negatives
count(dataframe.sensitivity.analysis, vars ="CLV", > 0)
# Set Working Directory
setwd("C:/Users/The Law/Downloads/Semester 2/Customer Analytics/R/Week03")
#create a bar chart that shows CLV by segment
barplot(marudata$CLV, main="CLV by Segment", xlab= "Segment", ylab="CLV")
#read data
marudata  <-read.csv("maru data students final.csv")
marudata$annual.revenue <- marudata$price.per.hr * marudata$annual.hours
marudata$annual.cost <- (marudata$workers.needed * marudata$worker.labor.cost.per.hr) + (marudata$instructors.needed * marudata$instructor.labor.cost.per.hr)
marudata$annual.margin <- marudata$annual.revenue - marudata$annual.cost
#calculate acquisition cost
marudata$acquistion.cost <- marudata$contact.cost/marudata$response.rate
#calculate CLV
marudata$CLV <- ((marudata$annual.margin*(1+marudata$interest.rate))/(1+marudata$interest.rate-marudata$retention.rate)) - marudata$acquistion.cost
#calculate CLV Skip Year 1
marudata$CLV.Skip.Y1 <- ((marudata$annual.margin*marudata$retention.rate)/(1+marudata$interest.rate-marudata$retention.rate)) - marudata$acquistion.cost
#create a bar chart that shows CLV by segment
barplot(marudata$CLV, main="CLV by Segment", xlab= "Segment", ylab="CLV")
dataframe.EBP <- data.frame(50000,30000,.6,.1)
a <- c("AC","M","R","D")
colnames(dataframe.EBP) <-a
dataframe.EBP <- rbind(dataframe.EBP, "20%" = c(60000,36000,.72,.1))
dataframe.EBP <- rbind(dataframe.EBP, "10%" = c(55000,33000,.66,.1))
dataframe.EBP <- rbind(dataframe.EBP, "-10%" = c(45000,27000,.54,.1))
dataframe.EBP <- rbind(dataframe.EBP, "-20%" = c(40000,24000,.48,.1))
b <- c("Orgi", "20%","10%","-10%","-20%")
rownames(dataframe.EBP) <- b
#new Dataframe for all 125 scenarios
dataframe.sensitivity.analysis <- expand.grid(dataframe.EBP[,1], dataframe.EBP[,2], dataframe.EBP[,3])
dataframe.sensitivity.analysis <- cbind(dataframe.sensitivity.analysis, "D" = c(.1))
colnames(dataframe.sensitivity.analysis) <-a
#adding CLV to Dataframe.Sensitivity.Analysis
dataframe.sensitivity.analysis <- cbind(dataframe.sensitivity.analysis,"CLV" = c((dataframe.sensitivity.analysis$M*(1+dataframe.sensitivity.analysis$D))/(1+dataframe.sensitivity.analysis$D-dataframe.sensitivity.analysis$R)) - dataframe.sensitivity.analysis$AC)
#calculating average CLV for Sensitivity Analysis
mean(dataframe.sensitivity.analysis$CLV)
#Barchart for CLV of Sensitivity Analysis
barplot(dataframe.sensitivity.analysis$CLV)
#calculating average CLV for Sensitivity Analysis
mean(dataframe.sensitivity.analysis$CLV)
