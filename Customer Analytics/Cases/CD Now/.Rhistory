linear_RFM <- lm(retained ~ recency + Frequency + Monetary, data = CDNow)
summary(linear_RFM)
CDNow$linear_RFM <- predict(linear_RFM, CDNow, type="response")
plot(CDNow$recency, CDNow$linear_RFM)
plot(CDNow$Frequency, CDNow$linear_RFM)
plot(CDNow$Monetary, CDNow$linear_RFM)
#logistic regression
logistic_RFM <- glm(retained ~ recency + Frequency + Monetary, data=CDNow, family="binomial")
summary(logistic_RFM)
CDNow$logistic_RFM <- predict(logistic_RFM, CDNow, type="response")
plot(CDNow$recency, CDNow$logistic_RFM)
plot(CDNow$Frequency, CDNow$logistic_RFM)
plot(CDNow$Monetary, CDNow$logistic_RFM)
#PART 4
#lift charts for logistic regression
plotLift(CDNow$retained, CDNow$logistic_RFM)
interaction_RFM <- glm(retained ~ recency + Frequency + Monetary + recency*Frequency, data=CDNow)
summary(interaction_RFM)
cvFit(logistic_RFM, y=CDNow$retained, data=CDNow, K=5, R-5)
cvFit(interaction_RFM, y=CDNow$retained, data=CDNow, K=5, R=5)
interaction_RFM <- glm(retained ~ recency + Frequency + Monetary + recency*Frequency, data=CDNow, family = "binomial")
cvFit(interaction_RFM, y=CDNow$retained, data=CDNow, K=5, R=5)
visreg(logistic_predictions_retained_interaction, "Frequency", "recency", ylab = "Frequency")
visreg(logistic_predictions_retained_interaction, "Frequency", "recency", ylab = "Frequency")
#Linear model of temperature
linear.model <- lm(attend ~ temp, data=dodgers)
summary(linear.model)
visreg(linear.model,"temp")
visreg(fit, "ownPlaylistAvgCons", "match", scale = "response" ylab= "targetPlaylistAvgCons", overlay = TRUE)
visreg(logistic_predictions_retained_interaction, scale = "response", "Frequency", "recency", ylab = "Frequency")
visreg(logistic_predictions_retained_interaction,"Frequency", by="recency", overlay = "TRUE")
visreg(logistic_predictions_retained_interaction,"Frequency", by="recency", overlay = "TRUE")
visreg(logistic_predictions_retained,"Frequency", by="recency", overlay = "TRUE")
#Dareck Giuliani
#CD Now Case
rm(list=ls())
library(dplyr)
library(ggplot2)
library(cvTools)
library(visreg)
setwd("C:/Users/The Law/Downloads/Academic/Semester 2/Customer Analytics/Cases/CD Now")
cd <- read.csv("CDNOW Restructured.csv")
#PART 1: TRADITIONAL RFM ANALYSIS ----
#dividing recency and monetary into deciles
#why would someone remove the reverse function of ntile?!
cd$recencyrank <- ntile(cd$recency, 10)
cd$monetaryrank <- ntile(cd$Monetary, 10)
cd$frequencyrank <- ntile(cd$Frequency, 10)
#retention rates of each decile in recency
recency <- c(1:10)
recency <- as.data.frame(recency)
colnames(recency) <- c("Decile")
#retention rates of each decile in monetary
monetary <- c(1:10)
monetary <- as.data.frame(monetary)
colnames(monetary) <- c("Decile")
#trying with frequency
frequency <- c(1:10)
frequency <- as.data.frame(frequency)
colnames(frequency) <- c("Decile")
for (i in 1:10) {
recency$avg_retained[i] <- mean(cd[cd$recencyrank == i, ]$retained)
monetary$avg_retained[i] <- mean(cd[cd$monetaryrank == i, ]$retained)
frequency$avg_retained[i] <- mean(cd[cd$frequencyrank == i, ]$retained)
}
#plot recency retention rates
plot(recency, xlab = "Recency Rank", ylab = "Percent Retained")
#plot monetary retention rates
plot(monetary, xlab = "Monetary Rank", ylab = "Percent Retained")
#plot frequency
plot(frequency, xlab = "Frequency Rank", ylab = "Percent Retained")
#PART 2: VISUALIZATION WITH CUMULATIVE LIFT CHARTS----
#Calculating inputs of left chart
for (i in 1:10) {
recency$n[i] <- length(cd[cd$recencyrank == i, ]$retained)
recency$respondents_recency[i] <- length(cd[cd$retained == 1 & cd$recencyrank == i, ]$retained)
recency$response_rate_percent_recency[i] <- recency$respondents_recency[i]/(length(cd[cd$recencyrank == i, ]$retained))
monetary$n[i] <- length(cd[cd$monetaryrank == i, ]$retained)
monetary$respondents_monetary[i] <- length(cd[cd$retained == 1 & cd$monetaryrank == i, ]$retained)
monetary$response_rate_percent_monetary[i] <- monetary$respondents_monetary[i]/(length(cd[cd$monetaryrank == i, ]$retained))
}
avg_recency_response <- mean(recency$response_rate_percent_recency)
avg_monetary_response <- mean(monetary$response_rate_percent_monetary)
#lift
recency$lift_recency <- (recency$response_rate_percent_recency)/avg_recency_response
monetary$lift_monetary <- monetary$response_rate_percent_monetary/avg_monetary_response
#Something I am ashamed of, but I was having difficulty with rownames, so I took matters into my own hands
monetary$Decile <- (11- monetary$Decile)
monetary <- monetary[order(monetary$Decile), ]
#cumulative respondents
recency$cum_respondents <- cumsum(recency$respondents_recency)
monetary$cum_respondents <- cumsum(monetary$respondents_monetary)
#Cumulative N
recency$cum_n <- cumsum(recency$n)
monetary$cum_n <- cumsum(monetary$n)
#Cumulative response rate
recency$cum_response_rate <- recency$cum_respondents/recency$cum_n
monetary$cum_response_rate <- monetary$cum_respondents/monetary$cum_n
#Cumulative Lift
recency$cum_lift <- recency$cum_response_rate/avg_recency_response
monetary$cum_lift <- monetary$cum_response_rate/avg_monetary_response
#plot cum lift
plot(x = recency$Decile, y=recency$cum_lift,type = "b",
main = "Recency Cumulative Lift",
ylab = "Cumulative Lift",
xlab = "Decile")
plot(x = monetary$Decile, y= monetary$cum_lift, type="b",
main = "Monetary Cumulative Lift",
ylab = "Cumulative Lift",
xlab = "Decile")
#PART 3: PREDICTING RETENTION WITH REGRESSION----
#Linear Regression
#Predicting retained
summary(lm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recency))
linear_predictions_retained <- lm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recency)
#each piece of the RFM analysis has a significant main effect on retention
#predict retention from model
cd$linear_predictions_retained <- predict(linear_predictions_retained, cd, type="response")
#graph linear predictions as a function of recency
plot(cd$recency, cd$linear_predictions_retained)
#graph linear predictions as a function of frequency
plot(cd$Frequency, cd$linear_predictions_retained)
#graph linear predictions as a function of monetary
plot(cd$Monetary, cd$linear_predictions_retained)
#Logistic Regression
#Predicting Retained
summary(glm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recency, family ="binomial"))
logistic_predictions_retained <- glm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recency, family = "binomial")
#predict retention from logistic model
cd$logistic_predictions_retained <- predict(logistic_predictions_retained, cd, type = "response")
#graph logit predictions as a function of recency
plot(cd$recency, cd$logistic_predictions_retained)
#graph logit predictions as a function of frequency
plot(cd$Frequency, cd$logistic_predictions_retained)
#graph logit predictions as a function of monetary
plot(cd$Monetary, cd$logistic_predictions_retained)
#PART 4: VISUALIZIGNG LOGISTIC REGRESSION WITH A LIFT CHART ----
#Bucket predictions of customers based on log model into deciles
cd$Log_Prediction_Deciles <- ntile(cd$logistic_predictions_retained, 10) #reverse = TRUE)
log_prediction <- c(1:10)
log_prediction <- as.data.frame(log_prediction)
colnames(log_prediction) <- c("Decile")
#Finds Retention Rate in Each Decile
for (i in 1:10) {
#n
log_prediction$n[i] <- length(cd[cd$Log_Prediction_Deciles == i, ]$retained)
#retention rate for each decile
log_prediction$Log_Predictions_Retention_Rate[i] <- mean(cd[cd$Log_Prediction_Deciles == i, ]$retained)
#finds respondents in each decile
log_prediction$respondents_log_predictions[i] <- length(cd[cd$retained == 1 & cd$Log_Prediction_Deciles == i, ]$retained)
#finds response rate
log_prediction$response_rate_percent_log[i] <- cd$respondents_log_predictions[i]/(length(cd[cd$Log_Prediction_Deciles == i, ]$retained))
}
#avg log response
avg_log_response <- mean(log_prediction$Log_Predictions_Retention_Rate)
#lift
log_prediction$Lift <- log_prediction$Log_Predictions_Retention_Rate/avg_log_response
#Not my proudest moment
log_prediction$Decile <- (11 - log_prediction$Decile)
log_prediction <- log_prediction[order(log_prediction$Decile), ]
#Cum Respondents
log_prediction$Cum_Respondents <- cumsum(log_prediction$respondents_log_predictions)
#Cum N
log_prediction$Cum_n <- cumsum(log_prediction$n)
#Cumulative response rate
log_prediction$cum_response_rate <- log_prediction$Cum_Respondents/log_prediction$Cum_n
#Cum Lift
log_prediction$Cum_Lift <- log_prediction$cum_response_rate/avg_log_response
#plot cum lift
plot(x = log_prediction$Decile, y=log_prediction$Cum_Lift,type = "b",
main = "Logistic Regression Cumulative Lift",
ylab = "Cumulative Lift",
xlab = "Decile")
#PART 5: INTERACTION MODEL AND CROSS-VALIDATION ----
#logistic regression that includes rec, freq, and monetary value with interaction between rec and freq
summary(glm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recency + cd$recency * cd$Frequency, family ="binomial"))
logistic_predictions_retained_interaction <- glm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recen
visreg2d(logistic_predictions_retained_interaction, xvar = "recency", yvar = "Frequency", scale = "response")
logistic_predictions_retained_interaction <- glm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recency +
(cd$recency * cd$Frequency), family ="binomial")
visreg2d(logistic_predictions_retained_interaction, xvar = "recency", yvar = "Frequency", scale = "response")
cd <- as.data.frame(cd)
#logistic regression that includes rec, freq, and monetary value with interaction between rec and freq
summary(glm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recency + cd$recency * cd$Frequency, family ="binomial"))
logistic_predictions_retained_interaction <- glm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recency +
(cd$recency * cd$Frequency), family ="binomial")
visreg2d(logistic_predictions_retained_interaction, xvar = "recency", yvar = "Frequency", scale = "response")
visreg2d(logistic_predictions_retained_interaction$glm, xvar = "recency", yvar = "Frequency", scale = "response")
visreg2d(linear_predictions_retained, xvar = "recency", yvar = "Frequency", scale = "response")
visreg2d(test, xvar = "recency", yvar = "Frequency", scale = "response")
test <- glm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recency +
(cd$recency * cd$Frequency))
visreg2d(test, xvar = "recency", yvar = "Frequency", scale = "response")
test <- glm(retained ~ Monetary + Frequency + recency +
(recency * Frequency), data = "cd")
test <- glm(retained ~ Monetary + Frequency + recency +
(recency * Frequency), data = cd)
visreg2d(test, xvar = "recency", yvar = "Frequency", scale = "response")
visreg(test, xvar = "recency", yvar = "Frequency", scale = "response")
visreg(test, "Requency", "recency", ylab= "Frequency", overlay = TRUE)
visreg(test, "Fequency", "recency", ylab= "Frequency", overlay = TRUE)
visreg(test, "Frequency", "recency", ylab= "Frequency", overlay = TRUE)
visreg(test, "Frequency", "recency", ylab= "Frequency", overlay = FALSE)
visreg(test, "Frequency", "recency", ylab= "retained", overlay = FALSE)
visreg2d(test, xvar = "recency", yvar = "retained", scale = "response")
visreg(test, "Frequency", "recency", ylab= "retained", overlay = TRUE)
visreg(test, "Frequency", "recency", overlay = TRUE)
visreg(test, "retained", "recency", overlay = TRUE)
visreg(test, "Frequency", "recency", ylab= "retained", overlay = FALSE)
visreg(test, "Frequency", "recency", ylab= "retained", overlay = TRUE)
visreg(test, "Frequency", "recency", ylab= "retained", overlay = TRUE, scale = "response")
CDNow$ntileMonetary <- ntile(CDNow$Monetary, 10)
CDNow$ntileRecency <- ntile(CDNow$recency, 10)
CDNow$ntileFrequency <- ntile(CDNow$Frequency, 10)
Recency <- aggregate(CDNow$retained,
by = list(CDNow$ntileRecency),
FUN = mean )
plot(Recency)
Monetary <- aggregate(CDNow$retained,
by = list(CDNow$ntileMonetary),
FUN = mean)
plot(Monetary)
#why doesn't it work for frequency?
Frequency <- aggregate(CDNow$retained,
by = list(CDNow$ntileFrequency),
FUN = mean)
plot(Frequency)
#PART 2
#install.packages("lift")
library("lift")
plotLift(churn$predictions, churn$labels)
plotLift(CDNow$retained, CDNow$Frequency)
plotLift(CDNow$retained, CDNow$Monetary)
plotLift(CDNow$retained, CDNow$recency)
x#PART 3
#linear regression
library(ggplot2)
linear_RFM <- lm(retained ~ recency + Frequency + Monetary, data = CDNow)
summary(linear_RFM)
CDNow$linear_RFM <- predict(linear_RFM, CDNow, type="response")
plot(CDNow$recency, CDNow$linear_RFM)
plot(CDNow$Frequency, CDNow$linear_RFM)
plot(CDNow$Monetary, CDNow$linear_RFM)
#logistic regression
logistic_RFM <- glm(retained ~ recency + Frequency + Monetary, data=CDNow, family="binomial")
summary(logistic_RFM)
CDNow$logistic_RFM <- predict(logistic_RFM, CDNow, type="response")
plot(CDNow$recency, CDNow$logistic_RFM)
plot(CDNow$Frequency, CDNow$logistic_RFM)
plot(CDNow$Monetary, CDNow$logistic_RFM)
#PART 4
#lift charts for logistic regression
plotLift(CDNow$retained, CDNow$logistic_RFM)
#PART 5
#Interaction Model and Cross-Validation
#install.packages("visreg")
library("visreg")
interaction_RFM <- glm(retained ~ recency + Frequency + Monetary + recency*Frequency, data=CDNow, family = "binomial")
summary(interaction_RFM)
install.packages("cvTools")
library("cvTools")
cvFit(logistic_RFM, y=CDNow$retained, data=CDNow, K=5, R-5)
cvFit(interaction_RFM, y=CDNow$retained, data=CDNow, K=5, R=5)
library("dplyr")
library(ggplot2)
#PART 1
CDNow$ntileMonetary <- ntile(CDNow$Monetary, 10)
CDNow$ntileRecency <- ntile(CDNow$recency, 10)
CDNow$ntileFrequency <- ntile(CDNow$Frequency, 10)
Recency <- aggregate(CDNow$retained,
by = list(CDNow$ntileRecency),
FUN = mean )
plot(Recency)
Monetary <- aggregate(CDNow$retained,
by = list(CDNow$ntileMonetary),
FUN = mean)
plot(Monetary)
#why doesn't it work for frequency?
Frequency <- aggregate(CDNow$retained,
by = list(CDNow$ntileFrequency),
FUN = mean)
plot(Frequency)
#PART 2
#install.packages("lift")
library("lift")
plotLift(churn$predictions, churn$labels)
plotLift(CDNow$retained, CDNow$Frequency)
plotLift(CDNow$retained, CDNow$Monetary)
plotLift(CDNow$retained, CDNow$recency)
x#PART 3
#linear regression
library(ggplot2)
linear_RFM <- lm(retained ~ recency + Frequency + Monetary, data = CDNow)
summary(linear_RFM)
CDNow$linear_RFM <- predict(linear_RFM, CDNow, type="response")
plot(CDNow$recency, CDNow$linear_RFM)
plot(CDNow$Frequency, CDNow$linear_RFM)
plot(CDNow$Monetary, CDNow$linear_RFM)
#logistic regression
logistic_RFM <- glm(retained ~ recency + Frequency + Monetary, data=CDNow, family="binomial")
summary(logistic_RFM)
CDNow$logistic_RFM <- predict(logistic_RFM, CDNow, type="response")
plot(CDNow$recency, CDNow$logistic_RFM)
plot(CDNow$Frequency, CDNow$logistic_RFM)
plot(CDNow$Monetary, CDNow$logistic_RFM)
#PART 4
#lift charts for logistic regression
plotLift(CDNow$retained, CDNow$logistic_RFM)
#PART 5
#Interaction Model and Cross-Validation
#install.packages("visreg")
library("visreg")
interaction_RFM <- glm(retained ~ recency + Frequency + Monetary + recency*Frequency, data=CDNow, family = "binomial")
summary(interaction_RFM)
install.packages("cvTools")
library("cvTools")
cvFit(logistic_RFM, y=CDNow$retained, data=CDNow, K=5, R-5)
cvFit(interaction_RFM, y=CDNow$retained, data=CDNow, K=5, R=5)
install.packages("cvTools")
cvFit(logistic_RFM, y=CDNow$retained, data=CDNow, K=5, R-5)
cvFit(interaction_RFM, y=CDNow$retained, data=CDNow, K=5, R=5)
rm(list=ls())
library(dplyr)
library(ggplot2)
library(cvTools)
library(visreg)
setwd("C:/Users/The Law/Downloads/Academic/Semester 2/Customer Analytics/Cases/CD Now")
cd <- read.csv("CDNOW Restructured.csv")
#dividing recency and monetary into deciles
#why would someone remove the reverse function of ntile?!
cd$recencyrank <- ntile(cd$recency, 10)
cd$monetaryrank <- ntile(cd$Monetary, 10)
cd$frequencyrank <- ntile(cd$Frequency, 10)
recency <- c(1:10)
recency <- as.data.frame(recency)
colnames(recency) <- c("Decile")
monetary <- c(1:10)
monetary <- as.data.frame(monetary)
colnames(monetary) <- c("Decile")
frequency <- c(1:10)
frequency <- as.data.frame(frequency)
colnames(frequency) <- c("Decile")
for (i in 1:10) {
recency$avg_retained[i] <- mean(cd[cd$recencyrank == i, ]$retained)
monetary$avg_retained[i] <- mean(cd[cd$monetaryrank == i, ]$retained)
frequency$avg_retained[i] <- mean(cd[cd$frequencyrank == i, ]$retained)
}
plot(recency, xlab = "Recency Rank", ylab = "Percent Retained")
plot(monetary, xlab = "Monetary Rank", ylab = "Percent Retained")
plot(frequency, xlab = "Frequency Rank", ylab = "Percent Retained")
for (i in 1:10) {
recency$n[i] <- length(cd[cd$recencyrank == i, ]$retained)
recency$respondents_recency[i] <- length(cd[cd$retained == 1 & cd$recencyrank == i, ]$retained)
recency$response_rate_percent_recency[i] <- recency$respondents_recency[i]/(length(cd[cd$recencyrank == i, ]$retained))
monetary$n[i] <- length(cd[cd$monetaryrank == i, ]$retained)
monetary$respondents_monetary[i] <- length(cd[cd$retained == 1 & cd$monetaryrank == i, ]$retained)
monetary$response_rate_percent_monetary[i] <- monetary$respondents_monetary[i]/(length(cd[cd$monetaryrank == i, ]$retained))
}
avg_recency_response <- mean(recency$response_rate_percent_recency)
avg_monetary_response <- mean(monetary$response_rate_percent_monetary)
recency$lift_recency <- (recency$response_rate_percent_recency)/avg_recency_response
monetary$lift_monetary <- monetary$response_rate_percent_monetary/avg_monetary_response
#Something I am ashamed of, but I was having difficulty with rownames, so I took matters into my own hands
monetary$Decile <- (11- monetary$Decile)
monetary <- monetary[order(monetary$Decile), ]
recency$cum_respondents <- cumsum(recency$respondents_recency)
monetary$cum_respondents <- cumsum(monetary$respondents_monetary)
recency$cum_n <- cumsum(recency$n)
monetary$cum_n <- cumsum(monetary$n)
recency$cum_response_rate <- recency$cum_respondents/recency$cum_n
monetary$cum_response_rate <- monetary$cum_respondents/monetary$cum_n
recency$cum_lift <- recency$cum_response_rate/avg_recency_response
monetary$cum_lift <- monetary$cum_response_rate/avg_monetary_response
plot(x = recency$Decile, y=recency$cum_lift,type = "b",
main = "Recency Cumulative Lift",
ylab = "Cumulative Lift",
xlab = "Decile")
plot(x = monetary$Decile, y= monetary$cum_lift, type="b",
main = "Monetary Cumulative Lift",
ylab = "Cumulative Lift",
xlab = "Decile")
#Linear Regression
#Predicting retained
summary(lm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recency))
linear_predictions_retained <- lm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recency)
#predict retention from model
cd$linear_predictions_retained <- predict(linear_predictions_retained, cd, type="response")
#graph linear predictions as a function of recency
plot(cd$recency, cd$linear_predictions_retained)
#graph linear predictions as a function of frequency
plot(cd$Frequency, cd$linear_predictions_retained)
#graph linear predictions as a function of monetary
plot(cd$Monetary, cd$linear_predictions_retained)
#Logistic Regression
#Predicting Retained
summary(glm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recency, family ="binomial"))
logistic_predictions_retained <- glm(cd$retained ~ cd$Monetary + cd$Frequency + cd$recency, family = "binomial")
#predict retention from logistic model
cd$logistic_predictions_retained <- predict(logistic_predictions_retained, cd, type = "response")
#graph logit predictions as a function of recency
plot(cd$recency, cd$logistic_predictions_retained)
#graph logit predictions as a function of frequency
plot(cd$Frequency, cd$logistic_predictions_retained)
#graph logit predictions as a function of monetary
plot(cd$Monetary, cd$logistic_predictions_retained)
cd$Log_Prediction_Deciles <- ntile(cd$logistic_predictions_retained, 10) #reverse = TRUE)
log_prediction <- c(1:10)
log_prediction <- as.data.frame(log_prediction)
colnames(log_prediction) <- c("Decile")
#Finds Retention Rate in Each Decile
for (i in 1:10) {
#n
log_prediction$n[i] <- length(cd[cd$Log_Prediction_Deciles == i, ]$retained)
#retention rate for each decile
log_prediction$Log_Predictions_Retention_Rate[i] <- mean(cd[cd$Log_Prediction_Deciles == i, ]$retained)
#finds respondents in each decile
log_prediction$respondents_log_predictions[i] <- length(cd[cd$retained == 1 & cd$Log_Prediction_Deciles == i, ]$retained)
#finds response rate
log_prediction$response_rate_percent_log[i] <- cd$respondents_log_predictions[i]/(length(cd[cd$Log_Prediction_Deciles == i, ]$retained))
}
avg_log_response <- mean(log_prediction$Log_Predictions_Retention_Rate)
log_prediction$Lift <- log_prediction$Log_Predictions_Retention_Rate/avg_log_response
#Not my proudest moment
log_prediction$Decile <- (11 - log_prediction$Decile)
log_prediction <- log_prediction[order(log_prediction$Decile), ]
log_prediction$Cum_Respondents <- cumsum(log_prediction$respondents_log_predictions)
log_prediction$Cum_n <- cumsum(log_prediction$n)
log_prediction$cum_response_rate <- log_prediction$Cum_Respondents/log_prediction$Cum_n
log_prediction$Cum_Lift <- log_prediction$cum_response_rate/avg_log_response
plot(x = log_prediction$Decile, y=log_prediction$Cum_Lift,type = "b",
main = "Logistic Regression Cumulative Lift",
ylab = "Cumulative Lift",
xlab = "Decile")
#set working directory
setwd("C:/Users/The Law/Downloads/Academic/Semester 2/Customer Analytics/Cases/CD Now")
rm(list=ls())
#load transaction data and retention data
CDNow.summary.all<-read.csv("CDNow Restructured.csv")
library(dplyr)
library(visreg)
#install.packages("cvTools")
library(cvTools)
CDNow.summary.all$frequencyquantile <- ntile(CDNow.summary.all$Frequency,3)
CDNow.summary.all$monetaryquantile <- ntile(CDNow.summary.all$Monetary,10)
CDNow.summary.all$recencyquantile <- ntile(CDNow.summary.all$recency,10)
CDNow.summary.all$monetaryquantile <- ntile(CDNow.summary.all$Monetary,10)
CDNow.summary.all$recencyquantile <- ntile(CDNow.summary.all$recency,10)
View(CDNow.summary.all)
monetary.quantile.summary<-aggregate(CDNow.summary.all$retained, by = list(CDNow.summary.all$monetaryquantile), FUN = mean)
colnames(monetary.quantile.summary)<-c("quantile","retention.percentage")
View(CDNow.summary.all)
monetary.quantile.summary$n<-table(CDNow.summary.all$monetaryquantile)
plot(monetary.quantile.summary$quantile, monetary.quantile.summary$retention.percentage, type="l")
View(monetary.quantile.summary)
recency.quantile.summary<-aggregate(CDNow.summary.all$retained, by = list(CDNow.summary.all$recencyquantile), FUN = mean)
colnames(recency.quantile.summary)<-c("quantile","retention.percentage")
recency.quantile.summary$n<-table(CDNow.summary.all$recencyquantile)
plot(recency.quantile.summary$quantile, recency.quantile.summary$retention.percentage, type="l")
View(recency.quantile.summary)
overall.responserate<-mean(CDNow.summary.all$retained)
monetary.quantile.summary<-monetary.quantile.summary[order(-monetary.quantile.summary$quantile),]
monetary.quantile.summary$cum.n<-cumsum(monetary.quantile.summary$n)
monetary.quantile.summary$n.retained<-monetary.quantile.summary$n*monetary.quantile.summary$retention.percentage
monetary.quantile.summary$cum.n.retained<-cumsum(monetary.quantile.summary$n.retained)
monetary.quantile.summary$cumlift<-(monetary.quantile.summary$cum.n.retained/monetary.quantile.summary$cum.n)/overall.responserate
plot(-monetary.quantile.summary$quantile, monetary.quantile.summary$cumlift, type="l", )
plot(monetary.quantile.summary$quantile, monetary.quantile.summary$cumlift, type="l", lwd=5, xlab="monetary quantile", ylab="cumulative lift",ylim=c(1,3), xlim=rev(range(monetary.quantile.summary$quantile)))
plot(-monetary.quantile.summary$quantile, monetary.quantile.summary$cumlift, type="l", )
plot(monetary.quantile.summary$quantile, monetary.quantile.summary$cumlift, type="l", lwd=5, xlab="monetary quantile", ylab="cumulative lift",ylim=c(1,3), xlim=rev(range(monetary.quantile.summary$quantile)))
abline(1,0, col="red", lwd=5)
recency.quantile.summary$cum.n<-cumsum(recency.quantile.summary$n)
recency.quantile.summary$n.retained<-recency.quantile.summary$n*recency.quantile.summary$retention.percentage
recency.quantile.summary$cum.n.retained<-cumsum(recency.quantile.summary$n.retained)
recency.quantile.summary$cumlift<-(recency.quantile.summary$cum.n.retained/recency.quantile.summary$cum.n)/overall.responserate
plot(recency.quantile.summary$quantile, recency.quantile.summary$cumlift, type="l",lwd=5, xlab="recency quantile", ylab="cumulative lift",ylim=c(1,3) )
abline(1,0, col="red", lwd=5)
#Linear regression
CDNow.linearfit <-lm(retained ~ recency + Frequency + Monetary, data=CDNow.summary.all)
summary(CDNow.linearfit)
CDNow.summary.all$linearfit <- predict(CDNow.linearfit, type="response")
hist(CDNow.summary.all$linearfit)
plot(CDNow.summary.all$Monetary,CDNow.summary.all$linearfit)
plot(CDNow.summary.all$Frequency,CDNow.summary.all$linearfit)
plot(CDNow.summary.all$recency,CDNow.summary.all$linearfit)
CDNow.logisticfit <- glm(retained ~ recency + Frequency + Monetary, data=CDNow.summary.all, family = "binomial")
summary(CDNow.logisticfit)
CDNow.summary.all$logisticfit <- predict(CDNow.logisticfit,type="response")
hist(CDNow.summary.all$logisticfit)
plot(CDNow.summary.all$Monetary,CDNow.summary.all$logisticfit)
plot(CDNow.summary.all$Frequency,CDNow.summary.all$logisticfit)
plot(CDNow.summary.all$recency,CDNow.summary.all$logisticfit)
logistic.quantile.summary<-aggregate(CDNow.summary.all$retained, by = list(CDNow.summary.all$logisticquantile), FUN = mean)
colnames(logistic.quantile.summary)<-c("quantile","retention.percentage")
CDNow.summary.all$logisticquantile <- ntile(CDNow.summary.all$logisticfit,10)
logistic.quantile.summary<-aggregate(CDNow.summary.all$retained, by = list(CDNow.summary.all$logisticquantile), FUN = mean)
colnames(logistic.quantile.summary)<-c("quantile","retention.percentage")
logistic.quantile.summary$n<-table(CDNow.summary.all$logisticquantile)
plot(logistic.quantile.summary$quantile, logistic.quantile.summary$retention.percentage, type="l")
logistic.quantile.summary<-logistic.quantile.summary[order(-logistic.quantile.summary$quantile),]
logistic.quantile.summary$cum.n<-cumsum(logistic.quantile.summary$n)
logistic.quantile.summary$n.retained<-logistic.quantile.summary$n*logistic.quantile.summary$retention.percentage
logistic.quantile.summary$cum.n.retained<-cumsum(logistic.quantile.summary$n.retained)
logistic.quantile.summary$cumlift<-(logistic.quantile.summary$cum.n.retained/logistic.quantile.summary$cum.n)/overall.responserate
plot(logistic.quantile.summary$quantile, logistic.quantile.summary$cumlift, type="l", lwd=5, xlab="quantile", ylab="cumulative lift",ylim=c(1,3), xlim=rev(range(logistic.quantile.summary$quantile)))
abline(1,0, col="red", lwd=5)
CDNow.logisticfit.int <- glm(retained ~ recency * Frequency + Monetary, data=CDNow.summary.all, family = "binomial")
summary(CDNow.logisticfit.int)
CDNow.summary.all$logisticfit.int <- predict(CDNow.logisticfit.int,type="response")
visreg(CDNow.logisticfit.int,"Frequency", by="recency", overlay="TRUE",  scale="response", xlim=c(1,20))
set.seed(12345)
cvFit(CDNow.logisticfit,y=CDNow.summary.all$retained, data=CDNow.summary.all,K=5, R=5)
cvFit(CDNow.logisticfit.int,y=CDNow.summary.all$retained, data=CDNow.summary.all,K=5, R=5)
